/* SVG (c) Robby Kraft, MIT License */(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):(a=a||self,a.SVG=b())})(this,function(){'use strict';function b(a){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},b(a)}function c(a){return d(a)||e(a)||f()}function d(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}function e(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function f(){throw new TypeError("Invalid attempt to spread non-iterable instance")}var g="undefined"!=typeof window&&"undefined"!=typeof window.document,h="undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node,i="object"===("undefined"==typeof self?"undefined":b(self))&&self.constructor&&"DedicatedWorkerGlobalScope"===self.constructor.name,j=function(){var a={};if(h){var b=require("xmldom"),c=b.DOMParser,d=b.XMLSerializer;a.DOMParser=c,a.XMLSerializer=d,a.document=new c().parseFromString("<!DOCTYPE html><title> </title>","text/html")}else g&&(a=window);return a}(),k="http://www.w3.org/2000/svg",l=function(a){return null!=a&&"function"==typeof a[Symbol.iterator]},m=function b(){for(var d=arguments.length,e=Array(d),f=0;f<d;f++)e[f]=arguments[f];switch(e.length){case void 0:case 0:return e;case 1:return l(e[0])&&"string"!=typeof e[0]?b.apply(void 0,c(e[0])):[e[0]];default:return Array.from(e).map(function(d){return l(d)?c(b(d)):d}).reduce(function(c,a){return c.concat(a)},[]);}},n=function(){for(var a=arguments.length,c=Array(a),d=0;d<a;d++)c[d]=arguments[d];var e=c.filter(function(b){return"number"==typeof b});if(e.length)return e;var f=c.filter(function(c){return"object"===b(c)&&"number"==typeof c.x});return f.length?f.map(function(a){return[a.x,a.y]}).reduce(function(c,a){return c.concat(a)},[]):[]},o=function(a){var b=a.getAttribute("viewBox");return null==b?void 0:b.split(" ").map(function(a){return parseFloat(a)})},p=function(a,b,c,e,f){var g=5<arguments.length&&void 0!==arguments[5]?arguments[5]:0,h=e/1-e;a.setAttributeNS(null,"viewBox",[b-h-g,c-h-g,e+2*h+2*g,f+2*h+2*g].join(" "))},q=new j.DOMParser().parseFromString("<div />","text/xml").documentElement.constructor,r=function(a){for(var b=arguments.length,c=Array(1<b?b-1:0),d=1;d<b;d++)c[d-1]=arguments[d];var e=c.filter(function(a){return!isNaN(a)&&a.constructor!==Array});switch(e.length){case 4:p(a,e[0],e[1],e[2],e[3]);case 2:p(a,0,0,e[0],e[1]);}var f=c.filter(function(a){return a instanceof q}).shift();return null!=f&&"function"==typeof f.appendChild&&f.appendChild(a),a},s=function(a){for(var b=arguments.length,d=Array(1<b?b-1:0),e=1;e<b;e++)d[e-1]=arguments[e];var f=n.apply(void 0,c(m.apply(void 0,d))),g=d.filter(function(b){return"string"==typeof b});return g&&(a.innerHTML=g),f&&["x","y"].forEach(function(b,c){return a.setAttribute(b,f[c])}),a},t=function(){return Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,5)},u=function(a){for(var b=arguments.length,c=Array(1<b?b-1:0),d=1;d<b;d++)c[d-1]=arguments[d];var e=c.filter(function(b){return"string"==typeof b||b instanceof String}).shift();return a.setAttribute("id",null==e?t():e),a},v={line:["x1","y1","x2","y2"],rect:["x","y","width","height"],circle:["cx","cy","r"],ellipse:["cx","cy","rx","ry"],polygon:["points"],polyline:["points"],path:["d"],clipPath:["id"]},w=function(){for(var a=Math.floor,b=arguments.length,c=Array(b),d=0;d<b;d++)c[d]=arguments[d];return Array.from(Array(a(c.length/2))).map(function(a,b){return"".concat(c[2*b+0],",").concat(c[2*b+1])}).join(" ")},x=function(a){for(var b=arguments.length,d=Array(1<b?b-1:0),e=1;e<b;e++)d[e-1]=arguments[e];return"line"===a?n.apply(void 0,c(m.apply(void 0,d))):"polyline"===a||"polygon"===a?[w.apply(void 0,c(n.apply(void 0,c(m.apply(void 0,d)))))]:d},y=function(a){for(var b=a.nodeName,c=arguments.length,d=Array(1<c?c-1:0),e=1;e<c;e++)d[e-1]=arguments[e];switch(b){case"svg":return r.apply(void 0,[a].concat(d));case"text":return s.apply(void 0,[a].concat(d));case"mask":case"clipPath":case"symbol":case"marker":return u.apply(void 0,[a].concat(d));}var f=v[b];if(void 0===f)return a;var g=x.apply(void 0,[b].concat(d));return f.forEach(function(b,c){null!=g[c]&&a.setAttribute(b,g[c])}),a},z=function(a){for(var b=arguments.length,c=Array(1<b?b-1:0),d=1;d<b;d++)c[d-1]=arguments[d];return y.apply(void 0,[j.document.createElementNS(k,a)].concat(c))},A={childOfText:["textPath","tspan"],childOfGradients:["stop"],childOfFilter:["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"],text:["text"],drawings:["circle","ellipse","line","path","polygon","polyline","rect"],group:["g"],nonVisible:["marker","symbol","clipPath","mask"],patterns:["linearGradient","radialGradient","pattern"],cdata:["cdata"],header:["desc","filter","metadata","style","script","title","view"],defs:["defs"],svg:["svg"]},B={svg:[A.svg,A.defs,A.header,A.nonVisible,A.patterns,A.group,A.drawings,A.text],defs:[A.header,A.patterns,A.nonVisible],filter:[A.childOfFilter],marker:[A.group,A.drawings,A.text],symbol:[A.group,A.drawings,A.text],clipPath:[A.group,A.drawings,A.text],mask:[A.group,A.drawings,A.text],g:[A.group,A.drawings,A.text],text:[A.childOfText],linearGradient:[A.childOfGradients],radialGradient:[A.childOfGradients]};Object.keys(B).forEach(function(a){B[a]=B[a].reduce(function(c,a){return c.concat(a)},[])});var C={general:["color","color-interpolation","cursor","direction","display","fill","fill-opacity","fill-rule","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","image-rendering","letter-spacing","marker-end","marker-mid","marker-start","markerHeight","markerUnits","markerWidth","opacity","overflow","paint-order","pointer-events","preserveAspectRatio","shape-rendering","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tabindex","transform-origin","user-select","vector-effect","visibility"],animation:["accumulate","additive","attributeName","begin","by","calcMode","dur","end","from","keyPoints","keySplines","keyTimes","max","min","repeatCount","repeatDur","restart","to","values"],effects:["azimuth","baseFrequency","bias","color-interpolation-filters","diffuseConstant","divisor","edgeMode","elevation","exponent","filter","filterRes","filterUnits","flood-color","flood-opacity","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","lighting-color","limitingConeAngle","mode","numOctaves","operator","order","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","primitiveUnits","radius","result","seed","specularConstant","specularExponent","stdDeviation","stitchTiles","surfaceScale","targetX","targetY","type","xChannelSelector","yChannelSelector"],text:["alignment-baseline","baseline-shift","dominant-baseline","method","overline-position","overline-thickness","spacing","startOffset","strikethrough-position","strikethrough-thickness","text-anchor","text-decoration","text-rendering","textLength","underline-position","underline-thickness","word-spacing","writing-mode"],clipPath:["clip-rule"],marker:["refX","refY"],pattern:["patternContentUnits","patternTransform","patternUnits"],gradient:["gradientTransform","gradientUnits","spreadMethod"],linearGradient:["x1","x2","y1","y2"],radialGradient:["cx","cy","r","fr","fx","fy"]},D={};A.drawings.forEach(function(a){D[a]=[C.general]}),A.childOfFilter.forEach(function(a){D[a]=[C.effects]}),A.childOfGradients.forEach(function(a){D[a]=[C.gradient]}),A.childOfText.forEach(function(a){D[a]=[C.general,C.text]}),D.svg=[C.general],D.defs=[C.general],D.filter=[C.effects],D.marker=[C.marker],D.clipPath=[C.clipPath],D.pattern=[C.pattern],D.g=[C.general],D.text=[C.general,C.text],D.linearGradient=[C.gradient,C.linearGradient],D.radialGradient=[C.gradient,C.radialGradient],Object.keys(D).forEach(function(a){D[a]=D[a].reduce(function(c,a){return c.concat(a)},[])});var E=function(a){return new j.DOMParser().parseFromString("<root></root>","text/xml").createCDATASection("".concat(a))},F=function(a){var b=o(a);if(void 0!==b)return b;if("function"==typeof a.getBoundingClientRect){var c=a.getBoundingClientRect();return[c.x,c.y,c.width,c.height]}return[,,,,].fill(void 0)},G=function(b){for(var d=arguments.length,e=Array(1<d?d-1:0),a=1;a<d;a++)e[a-1]=arguments[a];var f=e.filter(function(a){return"number"==typeof a});switch(f.length){case 2:p.apply(void 0,[b,0,0].concat(c(f)));break;case 4:p.apply(void 0,[b].concat(c(f)));}return b},H=function(a,b){var d=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2];if(!0===d){var e=a.parentElement;null!=e&&e.setAttribute("background-color",b)}var f=Array.from(a.childNodes).filter(function(a){return"svg-background-rectangle"===a.getAttribute("class")}).shift();return null==f&&(f=this.Prepare(this.Constructor.apply(this,["rect"].concat(c(F(a))))),f.setAttribute("class","svg-background-rectangle"),a.insertBefore(f,a.firstChild)),f.setAttribute("fill",b),f},I=function(a){var b=a.getElementsByTagName("style");return 0===b.length?void 0:b[0]},J=function(a,b){console.log("stylesheet",this,a,b);var c=I(a);return null==c&&(c=this.Prepare(this.Constructor("style")),a.insertBefore(c,a.firstChild)),c.textContent="",c.appendChild(E(b)),c},K={};K.getWidth=function(a){return F(a)[2]},K.getHeight=function(a){return F(a)[3]},K.size=function(){return G.apply(void 0,arguments)},K.background=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];return H.call.apply(H,[this].concat(b))},K.stylesheet=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];return J.call.apply(J,[this].concat(b))};var L=function(a){return null!=a&&"function"==typeof a[Symbol.iterator]},M=function b(){for(var d=arguments.length,e=Array(d),f=0;f<d;f++)e[f]=arguments[f];switch(e.length){case void 0:case 0:return e;case 1:return L(e[0])&&"string"!=typeof e[0]?b.apply(void 0,c(e[0])):[e[0]];default:return Array.from(e).map(function(d){return L(d)?c(b(d)):d}).reduce(function(c,a){return c.concat(a)},[]);}},N={m:"move",l:"line",v:"vertical",h:"horizontal",a:"ellipse",c:"curve",s:"smoothCurve",q:"quadCurve",t:"smoothQuadCurve",z:"close"};Object.keys(N).forEach(function(a){var b=N[a];N[a.toUpperCase()]=b.charAt(0).toUpperCase()+b.slice(1)});var O={clear:function(a){return a.setAttribute("d",""),a}},P=function(a){var b=a.getAttribute("d");return null==b?"":b},Q=function(a,b){for(var c=arguments.length,d=Array(2<c?c-2:0),e=2;e<c;e++)d[e-2]=arguments[e];var f=M(d).join(",");return a.setAttribute("d","".concat(P(a)).concat(b).concat(f)),a};Object.keys(N).forEach(function(a){O[N[a]]=function(b){for(var c=arguments.length,d=Array(1<c?c-1:0),e=1;e<c;e++)d[e-1]=arguments[e];return Q.apply(void 0,[b,a].concat(d))}});var R={svg:K,path:O},S={};Object.keys(R).forEach(function(a){S[a]={},Object.keys(R[a]).forEach(function(b){S[a][b]=function(c){for(var d,e=arguments.length,f=Array(1<e?e-1:0),g=1;g<e;g++)f[g-1]=arguments[g];return(d=R[a][b]).call.apply(d,[S,c].concat(f))}})});var T={svg:{version:"1.1",xmlns:k},style:{type:"text/css"}},U=function(a){return a.replace(/([-_][a-z])/ig,function(a){return a.toUpperCase().replace("-","").replace("_","")})},V=function a(c){S.Prepare=a,S.Constructor=z;var d=c.nodeName;return"object"===b(T[d])&&null!==T[d]&&Object.keys(T[d]).forEach(function(a){return c.setAttribute(a,T[d][a])}),"object"===b(S[d])&&null!==S[d]&&Object.keys(S[d]).forEach(function(a){Object.defineProperty(c,a,{value:function(){for(var b,e=arguments.length,f=Array(e),g=0;g<e;g++)f[g]=arguments[g];return(b=S[d])[a].apply(b,[c].concat(f))}})}),"object"===b(B[d])&&null!==B[d]&&B[d].forEach(function(b){Object.defineProperty(c,b,{value:function(){for(var d=arguments.length,e=Array(d),f=0;f<d;f++)e[f]=arguments[f];var g=a(z.apply(void 0,[b].concat(e)));return c.appendChild(g),g}})}),"object"===b(D[d])&&null!==D[d]&&D[d].forEach(function(a){Object.defineProperty(c,U(a),{value:function(){for(var b=arguments.length,d=Array(b),e=0;e<b;e++)d[e]=arguments[e];return c.setAttribute.apply(c,[a].concat(d)),c}})}),c},W={};Object.keys(A).forEach(function(a){return A[a].forEach(function(a){W[a]=function(){for(var b=arguments.length,c=Array(b),d=0;d<b;d++)c[d]=arguments[d];return V(z.apply(void 0,[a].concat(c)))}})});var X=function(a){for(var b=arguments.length,c=Array(1<b?b-1:0),d=1;d<b;d++)c[d-1]=arguments[d];c.filter(function(a){return"function"==typeof a}).forEach(function(b){return b.call(a,a)})},Y=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];var d=V(z.apply(void 0,["svg"].concat(b)));return"loading"===j.document.readyState?j.document.addEventListener("DOMContentLoaded",function(){return X.apply(void 0,[d].concat(b))}):X.apply(void 0,[d].concat(b)),d};return Object.assign(Y,W),Y.NS=k,Y});
