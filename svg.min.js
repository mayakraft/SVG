/* SVG (c) Robby Kraft, MIT License */(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):(a=a||self,a.SVG=b())})(this,function(){'use strict';function b(a){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},b(a)}function c(a){return d(a)||e(a)||f()}function d(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}function e(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function f(){throw new TypeError("Invalid attempt to spread non-iterable instance")}var g="undefined"!=typeof window&&"undefined"!=typeof window.document,h="undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node,i="object"===("undefined"==typeof self?"undefined":b(self))&&self.constructor&&"DedicatedWorkerGlobalScope"===self.constructor.name,j=function(){var a={};if(h){var b=require("xmldom"),c=b.DOMParser,d=b.XMLSerializer;a.DOMParser=c,a.XMLSerializer=d,a.document=new c().parseFromString("<!DOCTYPE html><title> </title>","text/html")}else g&&(a=window);return a}(),k="http://www.w3.org/2000/svg",l=function(a){return null!=a&&"function"==typeof a[Symbol.iterator]},m=function b(){for(var d=arguments.length,e=Array(d),f=0;f<d;f++)e[f]=arguments[f];switch(e.length){case void 0:case 0:return e;case 1:return l(e[0])&&"string"!=typeof e[0]?b.apply(void 0,c(e[0])):[e[0]];default:return Array.from(e).map(function(d){return l(d)?c(b(d)):d}).reduce(function(c,a){return c.concat(a)},[]);}},n=function(){for(var a=arguments.length,c=Array(a),d=0;d<a;d++)c[d]=arguments[d];var e=c.filter(function(b){return"number"==typeof b});if(e.length)return e;var f=c.filter(function(c){return"object"===b(c)&&"number"==typeof c.x});return f.length?f.map(function(a){return[a.x,a.y]}).reduce(function(c,a){return c.concat(a)},[]):[]},o=function(a,b,c,e,f){var g=5<arguments.length&&void 0!==arguments[5]?arguments[5]:0,h=e/1-e,d=[b-h-g,c-h-g,e+2*h+2*g,f+2*h+2*g].join(" ");a.setAttributeNS(null,"viewBox",d)},p=new j.DOMParser().parseFromString("<div />","text/xml").documentElement.constructor,q=function(a){for(var b=arguments.length,c=Array(1<b?b-1:0),d=1;d<b;d++)c[d-1]=arguments[d];var e=c.filter(function(a){return!isNaN(a)&&a.constructor!==Array});switch(e.length){case 4:o(a,e[0],e[1],e[2],e[3]);case 2:o(a,0,0,e[0],e[1]);}var f=c.filter(function(a){return a instanceof p}).shift();return null!=f&&"function"==typeof f.appendChild&&f.appendChild(a),a},r=function(a){for(var b=arguments.length,d=Array(1<b?b-1:0),e=1;e<b;e++)d[e-1]=arguments[e];var f=n.apply(void 0,c(m.apply(void 0,d))),g=d.filter(function(b){return"string"==typeof b});return g&&(a.innerHTML=g),f&&["x","y"].forEach(function(b,c){return a.setAttribute(b,f[c])}),a},s={line:["x1","y1","x2","y2"],rect:["x","y","width","height"],circle:["cx","cy","r"],ellipse:["cx","cy","rx","ry"],polygon:["points"],polyline:["points"],path:["d"]},t=function(){for(var a=Math.floor,b=arguments.length,c=Array(b),d=0;d<b;d++)c[d]=arguments[d];return Array.from(Array(a(c.length/2))).map(function(a,b){return"".concat(c[2*b+0],",").concat(c[2*b+1])}).join(" ")},u=function(a){for(var b=arguments.length,d=Array(1<b?b-1:0),e=1;e<b;e++)d[e-1]=arguments[e];return"line"===a?n.apply(void 0,c(m.apply(void 0,d))):"polyline"===a||"polygon"===a?[t.apply(void 0,c(n.apply(void 0,c(m.apply(void 0,d)))))]:d},v=function(a){for(var b=a.nodeName,c=arguments.length,d=Array(1<c?c-1:0),e=1;e<c;e++)d[e-1]=arguments[e];switch(b){case"svg":return q.apply(void 0,[a].concat(d));case"text":return r.apply(void 0,[a].concat(d));}var f=s[b];if(void 0===f)return a;var g=u.apply(void 0,[b].concat(d));return f.forEach(function(b,c){null!=g[c]&&a.setAttribute(b,g[c])}),a},w=function(a){for(var b=arguments.length,c=Array(1<b?b-1:0),d=1;d<b;d++)c[d-1]=arguments[d];return v.apply(void 0,[j.document.createElementNS(k,a)].concat(c))},x={childOfText:["textPath","tspan"],childOfGradients:["stop"],childOfFilter:["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"],text:["text"],drawings:["circle","ellipse","line","path","polygon","polyline","rect"],group:["g"],nonVisible:["marker","symbol","clipPath","mask"],patterns:["linearGradient","radialGradient","pattern"],cdata:["cdata"],header:["desc","filter","metadata","style","script","title","view"],defs:["defs"],svg:["svg"]},y={svg:[x.svg,x.defs,x.header,x.patterns,x.nonVisible,x.group,x.drawings,x.text],defs:[x.header,x.patterns,x.nonVisible],filter:[x.childOfFilter],marker:[x.group,x.drawings,x.text],symbol:[x.group,x.drawings,x.text],clipPath:[x.group,x.drawings,x.text],mask:[x.group,x.drawings,x.text],g:[x.group,x.drawings,x.text],text:[x.childOfText],linearGradient:[x.childOfGradients],radialGradient:[x.childOfGradients]};Object.keys(y).forEach(function(a){y[a]=y[a].reduce(function(c,a){return c.concat(a)},[])});var z={general:["color","color-interpolation","cursor","direction","display","fill","fill-opacity","fill-rule","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","image-rendering","letter-spacing","marker-end","marker-mid","marker-start","markerHeight","markerUnits","markerWidth","opacity","overflow","paint-order","pointer-events","preserveAspectRatio","shape-rendering","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tabindex","transform-origin","user-select","vector-effect","visibility"],animation:["accumulate","additive","attributeName","begin","by","calcMode","dur","end","from","keyPoints","keySplines","keyTimes","max","min","repeatCount","repeatDur","restart","to","values"],effects:["azimuth","baseFrequency","bias","color-interpolation-filters","diffuseConstant","divisor","edgeMode","elevation","exponent","filter","filterRes","filterUnits","flood-color","flood-opacity","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","lighting-color","limitingConeAngle","mode","numOctaves","operator","order","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","primitiveUnits","radius","result","seed","specularConstant","specularExponent","stdDeviation","stitchTiles","surfaceScale","targetX","targetY","type","xChannelSelector","yChannelSelector"],text:["alignment-baseline","baseline-shift","dominant-baseline","method","overline-position","overline-thickness","spacing","startOffset","strikethrough-position","strikethrough-thickness","text-anchor","text-decoration","text-rendering","textLength","underline-position","underline-thickness","word-spacing","writing-mode"],clipPath:["clip-rule"],marker:["refX","refY"],pattern:["patternContentUnits","patternTransform","patternUnits"],gradient:["gradientTransform","gradientUnits","spreadMethod"],linearGradient:["x1","x2","y1","y2"],radialGradient:["cx","cy","r","fr","fx","fy"]},A={};x.drawings.forEach(function(a){A[a]=[z.general]}),x.childOfFilter.forEach(function(a){A[a]=[z.effects]}),x.childOfGradients.forEach(function(a){A[a]=[z.gradient]}),x.childOfText.forEach(function(a){A[a]=[z.general,z.text]}),A.svg=[z.general],A.defs=[z.general],A.filter=[z.effects],A.marker=[z.marker],A.clipPath=[z.clipPath],A.pattern=[z.pattern],A.g=[z.general],A.text=[z.general,z.text],A.linearGradient=[z.gradient,z.linearGradient],A.radialGradient=[z.gradient,z.radialGradient],Object.keys(A).forEach(function(a){A[a]=A[a].reduce(function(c,a){return c.concat(a)},[])});var B={svg:{version:"1.1",xmlns:k},style:{type:"text/css"}},C=function(a){return a.replace(/([-_][a-z])/ig,function(a){return a.toUpperCase().replace("-","").replace("_","")})},D=function a(c){var d=c.nodeName;return"object"===b(B[d])&&null!==B[d]&&Object.keys(B[d]).forEach(function(a){return c.setAttribute(a,B[d][a])}),"object"===b(y[d])&&null!==y[d]&&y[d].forEach(function(b){Object.defineProperty(c,b,{value:function(){for(var d=arguments.length,e=Array(d),f=0;f<d;f++)e[f]=arguments[f];var g=a(w.apply(void 0,[b].concat(e)));return c.appendChild(g),g}})}),"object"===b(A[d])&&null!==A[d]&&A[d].forEach(function(a){Object.defineProperty(c,C(a),{value:function(){for(var b=arguments.length,d=Array(b),e=0;e<b;e++)d[e]=arguments[e];return c.setAttribute.apply(c,[a].concat(d)),c}})}),c},E={};Object.keys(x).forEach(function(a){return x[a].forEach(function(a){E[a]=function(){for(var b=arguments.length,c=Array(b),d=0;d<b;d++)c[d]=arguments[d];return D(w.apply(void 0,[a].concat(c)))}})});var F=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];return D(w.apply(void 0,["svg"].concat(b)))};return Object.assign(F,E),F});
