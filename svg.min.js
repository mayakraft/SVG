/* SVG (c) Robby Kraft, MIT License */(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):(a=a||self,a.SVG=b())})(this,function(){'use strict';function a(b){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},a(b)}var b="undefined"!=typeof window&&"undefined"!=typeof window.document,c="undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node,d="object"===("undefined"==typeof self?"undefined":a(self))&&self.constructor&&"DedicatedWorkerGlobalScope"===self.constructor.name,e=function(){var a={};if(c){var d=require("xmldom"),e=d.DOMParser,f=d.XMLSerializer;a.DOMParser=e,a.XMLSerializer=f,a.document=new e().parseFromString("<!DOCTYPE html><title> </title>","text/html")}else b&&(a=window);return a}(),f="http://www.w3.org/2000/svg",g=function(b){for(var c=arguments.length,d=Array(1<c?c-1:0),a=1;a<c;a++)d[a-1]=arguments[a];return"line"===b?d:d},h={line:["x1","y1","x2","y2"],rect:["x","y","width","height"],circle:["cx","cy","r"],ellipse:["cx","cy","rx","ry"],polygon:["points"],polyline:["points"],path:["d"],text:[void 0,"x","y"]};delete h.text[0];var i=function(b){var c=b.nodeName,d=h[c];if(void 0===d)return b;for(var e=arguments.length,f=Array(1<e?e-1:0),a=1;a<e;a++)f[a-1]=arguments[a];var j=g.apply(void 0,[c].concat(f));return d.forEach(function(a,c){null!=j[c]&&b.setAttribute(a,j[c])}),b},j=function(a){for(var b=arguments.length,c=Array(1<b?b-1:0),d=1;d<b;d++)c[d-1]=arguments[d];return i.apply(void 0,[e.document.createElementNS(f,a)].concat(c))},k={childOfText:["textPath","tspan"],childOfGradients:["stop"],childOfFilter:["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"],text:["text"],drawings:["circle","ellipse","line","path","polygon","polyline","rect"],group:["g"],nonVisible:["marker","symbol","clipPath","mask"],patterns:["linearGradient","radialGradient","pattern"],cdata:["cdata"],header:["desc","filter","metadata","style","script","title","view"],defs:["defs"],svg:["svg"]},l={svg:{version:"1.1",xmlns:f},style:{type:"text/css"}},m={svg:[k.svg,k.defs,k.header,k.patterns,k.nonVisible,k.group,k.drawings,k.text],defs:[k.header,k.patterns,k.nonVisible],filter:[k.childOfFilter],marker:[k.group,k.drawings,k.text],symbol:[k.group,k.drawings,k.text],clipPath:[k.group,k.drawings,k.text],mask:[k.group,k.drawings,k.text],g:[k.group,k.drawings,k.text],text:[k.childOfText],linearGradient:[k.childOfGradients],radialGradient:[k.childOfGradients]};Object.keys(m).forEach(function(a){m[a]=m[a].reduce(function(c,a){return c.concat(a)},[])});var n={general:["color","color-interpolation","cursor","direction","display","fill","fill-opacity","fill-rule","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","image-rendering","letter-spacing","marker-end","marker-mid","marker-start","markerHeight","markerUnits","markerWidth","opacity","overflow","paint-order","pointer-events","preserveAspectRatio","shape-rendering","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tabindex","transform-origin","user-select","vector-effect","visibility"],animation:["accumulate","additive","attributeName","begin","by","calcMode","dur","end","from","keyPoints","keySplines","keyTimes","max","min","repeatCount","repeatDur","restart","to","values"],effects:["azimuth","baseFrequency","bias","color-interpolation-filters","diffuseConstant","divisor","edgeMode","elevation","exponent","filter","filterRes","filterUnits","flood-color","flood-opacity","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","lighting-color","limitingConeAngle","mode","numOctaves","operator","order","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","primitiveUnits","radius","result","seed","specularConstant","specularExponent","stdDeviation","stitchTiles","surfaceScale","targetX","targetY","type","xChannelSelector","yChannelSelector"],text:["alignment-baseline","baseline-shift","dominant-baseline","method","overline-position","overline-thickness","spacing","startOffset","strikethrough-position","strikethrough-thickness","text-anchor","text-decoration","text-rendering","textLength","underline-position","underline-thickness","word-spacing","writing-mode"],clipPath:["clip-rule"],marker:["refX","refY"],pattern:["patternContentUnits","patternTransform","patternUnits"],gradient:["gradientTransform","gradientUnits","spreadMethod"],linearGradient:["x1","x2","y1","y2"],radialGradient:["cx","cy","r","fr","fx","fy"]},o={};k.drawings.forEach(function(a){o[a]=[n.general]}),k.childOfFilter.forEach(function(a){o[a]=[n.effects]}),k.childOfGradients.forEach(function(a){o[a]=[n.gradient]}),k.childOfText.forEach(function(a){o[a]=[n.general,n.text]}),o.svg=[n.general],o.defs=[n.general],o.filter=[n.effects],o.marker=[n.marker],o.clipPath=[n.clipPath],o.pattern=[n.pattern],o.g=[n.general],o.text=[n.general,n.text],o.linearGradient=[n.gradient,n.linearGradient],o.radialGradient=[n.gradient,n.radialGradient],Object.keys(o).forEach(function(a){o[a]=o[a].reduce(function(c,a){return c.concat(a)},[])});var p=function(a){return a.replace(/([-_][a-z])/ig,function(a){return a.toUpperCase().replace("-","").replace("_","")})},q=function b(c){var d=c.nodeName;return"object"===a(l[d])&&null!==l[d]&&Object.keys(l[d]).forEach(function(a){return c.setAttribute(a,l[d][a])}),"object"===a(m[d])&&null!==m[d]&&m[d].forEach(function(a){Object.defineProperty(c,a,{value:function(){for(var d=arguments.length,e=Array(d),f=0;f<d;f++)e[f]=arguments[f];var g=b(j.apply(void 0,[a].concat(e)));return c.appendChild(g),g}})}),"object"===a(o[d])&&null!==o[d]&&o[d].forEach(function(a){Object.defineProperty(c,p(a),{value:function(){for(var b=arguments.length,d=Array(b),e=0;e<b;e++)d[e]=arguments[e];return c.setAttribute.apply(c,[a].concat(d)),c}})}),c},r={};Object.keys(k).forEach(function(a){return k[a].forEach(function(a){r[a]=function(){for(var b=arguments.length,c=Array(b),d=0;d<b;d++)c[d]=arguments[d];return q(j.apply(void 0,[a].concat(c)))}})});var s=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];return q(j.apply(void 0,["svg"].concat(b)))};return Object.assign(s,r),s});
